#include <iostream>
#include <cmath>

using namespace std;

double f(double x) {
    return (x / (1 + pow(x, 3)));
}

int main()
{
    double a = 0, b = 1, h;
    double s0 = 0, s = 777777777777777, eps = 0.000001;
    int n = 50;

    while (abs(s0 - s) > eps)
    {
        n = 2 * n;  // Удваиваем количество разбиений, чтобы обеспечить четность, т.к в методе симпсона n должа быть четной 
        s0 = s;
        h = (b - a) / n;
        s = 0;

        // Формула Симпсона
        s = f(a) + f(b);  // Сначала добавляем значения на концах интервала
        for (int i = 1; i < n; i++)
        {
            double x = a + i * h;
            if (i % 2 == 0)
                s = s + 2 * f(x);  // Для четных i (внутренние точки с коэффициентом 2)
            else
                s = s + 4 * f(x);  // Для нечетных i (внутренние точки с коэффициентом 4)
        }
        s = s * h / 3;  // Умножаем на шаг и делим на 3 (шаг уже умножен на 2)

    }

    cout << s;
}